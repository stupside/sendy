/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/auth/peer': {
    /** @description Connect to a session. */
    post: {
      requestBody: {
        content: {
          'application/json': {
            /** @description The code to connect to the session */
            code: string
            device?: {
              /**
               * Format: ipv4
               * @description The ip of the device
               */
              ip?: string
              /** @description The agent attached to the device */
              agent?: string
            }
          }
        }
      }
      responses: {
        /** @description Default Response */
        200: {
          content: {
            'application/json': {
              /** @description The client token. */
              token: string
              /** @description The id of the device */
              device: number
              /** @description The id of the session */
              session: number
            }
          }
        }
      }
    }
  }
  '/auth/register': {
    /** @description Create a session. */
    post: {
      requestBody?: {
        content: {
          'application/json': {
            /**
             * Format: ipv4
             * @description The ip of the device
             */
            ip?: string
            /** @description The agent attached to the device */
            agent?: string
          }
        }
      }
      responses: {
        /** @description Default Response */
        200: {
          content: {
            'application/json': {
              /** @description The token for the session */
              token: string
              /** @description The id of the device */
              device: number
              /** @description The id of the session */
              session: number
            }
          }
        }
      }
    }
  }
  '/hooks/sse': {
    /** @description Subscribe to server sent events */
    get: {
      responses: {
        /** @description Default Response */
        default: {
          content: {
            'text/event-stream':
              | {
                  payload: {
                    /** @description The id of the device. */
                    device: number
                  }
                  /**
                   * @description The type of the event.
                   * @enum {string}
                   */
                  type: '/session/peer'
                }
              | {
                  payload: {
                    /** @description The id of the media. */
                    id: number
                    /** @description The type of the media. */
                    type: 'text' | 'image' | 'video' | 'audio'
                  }
                  /**
                   * @description The type of the event.
                   * @enum {string}
                   */
                  type: '/media/cast'
                }
          }
        }
      }
    }
  }
  '/medias/cast': {
    /** @description Cast a media. */
    post: {
      /** @description The definition of a media. */
      requestBody?: {
        content: {
          'application/json':
            | {
                /** @description The value of the media. */
                value: string
                /**
                 * @description The type of the media.
                 * @enum {string}
                 */
                type: 'text'
                /**
                 * @description How the media should be handled.
                 * @enum {string}
                 */
                handler: 'default'
                metadata: {
                  /** @description Should the text be hidden when casted */
                  sensitive: boolean
                  /**
                   * @description The version of the configuration.
                   * @enum {number}
                   */
                  version: 0
                }
              }
            | {
                /** @description The value of the media. */
                value: string
                /**
                 * @description The type of the media.
                 * @enum {string}
                 */
                type: 'text'
                /**
                 * @description How the media should be handled.
                 * @enum {string}
                 */
                handler: 'link'
                metadata: {
                  /** @description Should the link be rendered as an iframe */
                  iframe: boolean
                  /**
                   * @description The version of the configuration.
                   * @enum {number}
                   */
                  version: 0
                }
              }
            | {
                /** @description The value of the media. */
                value: string
                /**
                 * @description The type of the media.
                 * @enum {string}
                 */
                type: 'image'
                /**
                 * @description How the media should be handled.
                 * @enum {string}
                 */
                handler: 'default'
                metadata: {
                  /**
                   * @description The version of the configuration.
                   * @enum {number}
                   */
                  version: 0
                }
              }
            | {
                /** @description The value of the media. */
                value: string
                /**
                 * @description The type of the media.
                 * @enum {string}
                 */
                type: 'video'
                /**
                 * @description How the media should be handled.
                 * @enum {string}
                 */
                handler: 'default'
                metadata: {
                  /**
                   * @description The version of the configuration.
                   * @enum {number}
                   */
                  version: 0
                }
              }
            | {
                /** @description The value of the media. */
                value: string
                /**
                 * @description The type of the media.
                 * @enum {string}
                 */
                type: 'video'
                /**
                 * @description How the media should be handled.
                 * @enum {string}
                 */
                handler: 'movie'
                metadata: {
                  /** @description The ttid of the video. */
                  ttid: string
                  /**
                   * @description The version of the configuration.
                   * @enum {number}
                   */
                  version: 0
                }
              }
            | {
                /** @description The value of the media. */
                value: string
                /**
                 * @description The type of the media.
                 * @enum {string}
                 */
                type: 'audio'
                /**
                 * @description How the media should be handled.
                 * @enum {string}
                 */
                handler: 'default'
                metadata: {
                  /**
                   * @description The version of the configuration.
                   * @enum {number}
                   */
                  version: 0
                }
              }
        }
      }
      responses: {
        /** @description Default Response */
        303: {
          content: {
            'application/json': Record<string, never>
          }
        }
      }
    }
  }
  '/medias/{id}': {
    /** @description Retrieve a media by id. */
    get: {
      parameters: {
        path: {
          /** @description The id of the media. */
          id: number
        }
      }
      responses: {
        /** @description Default Response */
        200: {
          content: {
            'application/json': {
              /** @description The date when the media was casted */
              date: number
            } & (
              | {
                  /** @description The value of the media. */
                  value: string
                  /**
                   * @description The type of the media.
                   * @enum {string}
                   */
                  type: 'text'
                  /**
                   * @description How the media should be handled.
                   * @enum {string}
                   */
                  handler: 'default'
                  metadata: {
                    /** @description Should the text be hidden when casted */
                    sensitive: boolean
                    /**
                     * @description The version of the configuration.
                     * @enum {number}
                     */
                    version: 0
                  }
                }
              | {
                  /** @description The value of the media. */
                  value: string
                  /**
                   * @description The type of the media.
                   * @enum {string}
                   */
                  type: 'text'
                  /**
                   * @description How the media should be handled.
                   * @enum {string}
                   */
                  handler: 'link'
                  metadata: {
                    /** @description Should the link be rendered as an iframe */
                    iframe: boolean
                    /**
                     * @description The version of the configuration.
                     * @enum {number}
                     */
                    version: 0
                  }
                }
              | {
                  /** @description The value of the media. */
                  value: string
                  /**
                   * @description The type of the media.
                   * @enum {string}
                   */
                  type: 'image'
                  /**
                   * @description How the media should be handled.
                   * @enum {string}
                   */
                  handler: 'default'
                  metadata: {
                    /**
                     * @description The version of the configuration.
                     * @enum {number}
                     */
                    version: 0
                  }
                }
              | {
                  /** @description The value of the media. */
                  value: string
                  /**
                   * @description The type of the media.
                   * @enum {string}
                   */
                  type: 'video'
                  /**
                   * @description How the media should be handled.
                   * @enum {string}
                   */
                  handler: 'default'
                  metadata: {
                    /**
                     * @description The version of the configuration.
                     * @enum {number}
                     */
                    version: 0
                  }
                }
              | {
                  /** @description The value of the media. */
                  value: string
                  /**
                   * @description The type of the media.
                   * @enum {string}
                   */
                  type: 'video'
                  /**
                   * @description How the media should be handled.
                   * @enum {string}
                   */
                  handler: 'movie'
                  metadata: {
                    /** @description The ttid of the video. */
                    ttid: string
                    /**
                     * @description The version of the configuration.
                     * @enum {number}
                     */
                    version: 0
                  }
                }
              | {
                  /** @description The value of the media. */
                  value: string
                  /**
                   * @description The type of the media.
                   * @enum {string}
                   */
                  type: 'audio'
                  /**
                   * @description How the media should be handled.
                   * @enum {string}
                   */
                  handler: 'default'
                  metadata: {
                    /**
                     * @description The version of the configuration.
                     * @enum {number}
                     */
                    version: 0
                  }
                }
            )
          }
        }
      }
    }
  }
  '/medias/history': {
    /** @description Get history of casted medias for the current session. */
    get: {
      parameters: {
        query?: {
          /** @description The type of the media */
          type?: 'text' | 'image' | 'video' | 'audio'
        }
      }
      responses: {
        /** @description Default Response */
        200: {
          content: {
            'application/json': ({
              /** @description The id of the media. */
              id: number
              /** @description The date when the media was casted. */
              date: number
            } & (
              | {
                  /** @description The value of the media. */
                  value: string
                  /**
                   * @description The type of the media.
                   * @enum {string}
                   */
                  type: 'text'
                  /**
                   * @description How the media should be handled.
                   * @enum {string}
                   */
                  handler: 'default'
                  metadata: {
                    /** @description Should the text be hidden when casted */
                    sensitive: boolean
                    /**
                     * @description The version of the configuration.
                     * @enum {number}
                     */
                    version: 0
                  }
                }
              | {
                  /** @description The value of the media. */
                  value: string
                  /**
                   * @description The type of the media.
                   * @enum {string}
                   */
                  type: 'text'
                  /**
                   * @description How the media should be handled.
                   * @enum {string}
                   */
                  handler: 'link'
                  metadata: {
                    /** @description Should the link be rendered as an iframe */
                    iframe: boolean
                    /**
                     * @description The version of the configuration.
                     * @enum {number}
                     */
                    version: 0
                  }
                }
              | {
                  /** @description The value of the media. */
                  value: string
                  /**
                   * @description The type of the media.
                   * @enum {string}
                   */
                  type: 'image'
                  /**
                   * @description How the media should be handled.
                   * @enum {string}
                   */
                  handler: 'default'
                  metadata: {
                    /**
                     * @description The version of the configuration.
                     * @enum {number}
                     */
                    version: 0
                  }
                }
              | {
                  /** @description The value of the media. */
                  value: string
                  /**
                   * @description The type of the media.
                   * @enum {string}
                   */
                  type: 'video'
                  /**
                   * @description How the media should be handled.
                   * @enum {string}
                   */
                  handler: 'default'
                  metadata: {
                    /**
                     * @description The version of the configuration.
                     * @enum {number}
                     */
                    version: 0
                  }
                }
              | {
                  /** @description The value of the media. */
                  value: string
                  /**
                   * @description The type of the media.
                   * @enum {string}
                   */
                  type: 'video'
                  /**
                   * @description How the media should be handled.
                   * @enum {string}
                   */
                  handler: 'movie'
                  metadata: {
                    /** @description The ttid of the video. */
                    ttid: string
                    /**
                     * @description The version of the configuration.
                     * @enum {number}
                     */
                    version: 0
                  }
                }
              | {
                  /** @description The value of the media. */
                  value: string
                  /**
                   * @description The type of the media.
                   * @enum {string}
                   */
                  type: 'audio'
                  /**
                   * @description How the media should be handled.
                   * @enum {string}
                   */
                  handler: 'default'
                  metadata: {
                    /**
                     * @description The version of the configuration.
                     * @enum {number}
                     */
                    version: 0
                  }
                }
            ))[]
          }
        }
      }
    }
  }
  '/server/config': {
    /** @description Get the service's configuration. */
    get: {
      responses: {
        /** @description The configuration of the service. */
        200: {
          content: {
            'application/json': {
              /** @description The code configuration. */
              code: {
                /** @description The length of session codes. */
                len: number
              }
            }
          }
        }
      }
    }
  }
  '/sessions/code': {
    /** @description Generate a code to connect to a session. */
    post: {
      requestBody: {
        content: {
          'application/json': {
            /**
             * @description When will the code expire from now, in seconds.
             * @default 30
             */
            expiry?: number
            /**
             * Format: uri
             * @description Where the qr code should redirect the user to.
             */
            redirection: string
          }
        }
      }
      responses: {
        /** @description Default Response */
        200: {
          content: {
            'application/json': {
              /** @description The qr code wrapping the session code. */
              qr: string
              /** @description The key to retrieve a long lived token. */
              raw: string
              /** @description When will the code expire. */
              expiry: number
            }
          }
        }
      }
    }
  }
}

export type webhooks = Record<string, never>

export interface components {
  schemas: {}
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}

export type $defs = Record<string, never>

export type external = Record<string, never>

export type operations = Record<string, never>
